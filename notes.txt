// there are 3 ways to apply css

--> inline styling ---> every html elment have style atrribute --> 
---> we can write css inside style tag --
--> external css --> we can create seperate file for css and apply styling thorugh link stylesheet ---> 




  // css selectors - it helps us to select an html element for styling.


  before applying css to any html elemnt we need to select the element - css selectors will help in that.


  // id ---> #idStyle
  // class --> .className
  // element

  // pseuodo selectors

  // id should be always unique in the whold document
  // each element can have only one id
  // each element can have multiple classes



   single value --> it applies on four sides : ex: margin : 20px
   four values --> trbl --> top right bottom left ex : margin: 20px 0px 20px 30px
   two values --> first value will be top and bottom , second value will be left and right margin: 20px 0px
   three value --> first value will be top, middle value will be left and right, last one will be bottom : margin: 20px 0px 16px




  ---> css priority

  --> priority -------->  important, inline style, id, class, element

  <div class="myclass" id="my-id">

  inline --> 

  #my-id{

  }

  .myclass{

  }

  div{

  }


positions

static --> 


relative  --> changes the postion of the element with respect to its own axis/postion


absolute ---> it renders the elements once all the elements are rendered. 

changes the postion of the element with respect to parent

make sure your parent element should have any postion other than static --> mostly people use relative

fixed --> its always fixed. the element follows the document as parent container for top left etc..

sticky --> relative + fixed --> initially it will be relative as soon as it reaches its top values it will be fixed.

flex: --> to arrange / layout the element in one direction --> either row(horizontal) or column (vertical)


default flex direction : row
 
justify-content --> align the elements horizantally 
align-items --> . align the elements vertical


flex direction : column

justify-content --> align the elements vertically
align-items --> . align the elements horizantally

grid --> to arrange / layout the element in two directions --> both row(horizontal) and column(vertical)






// box modal
//positions
//flex box
//grid